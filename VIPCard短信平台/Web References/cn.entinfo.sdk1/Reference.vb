'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.269
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.269 版自动生成。
'
Namespace cn.entinfo.sdk1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMS_ROperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSEx_ROperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnRegisterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChargUpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UDPPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UDPSIGNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UDPSIGNEXOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RECSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RECSMSExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RECSMS_UTF8OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RECSMSEx_UTF8OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegisterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFlagOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SMSTestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllInfo2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetGaoDuanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGaoDuanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdSmsSendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdSmsSend_uOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdSmsSend_DESOperationCompleted As System.Threading.SendOrPostCallback
        
        Private moOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mo2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private reportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private report2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private report2DESOperationCompleted As System.Threading.SendOrPostCallback
        
        Private msgidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private balanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private gxmtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fileMTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mmsFileMTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdMmsSendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdMmsSendFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdAudioSendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdFaxSendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mdMmsReceiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.VIPCard短信平台.My.MySettings.Default.VIPCard短信平台_cn_entinfo_sdk1_WebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendSMSCompleted As SendSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMS_RCompleted As SendSMS_RCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSExCompleted As SendSMSExCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSEx_RCompleted As SendSMSEx_RCompletedEventHandler
        
        '''<remarks/>
        Public Event UnRegisterCompleted As UnRegisterCompletedEventHandler
        
        '''<remarks/>
        Public Event ChargUpCompleted As ChargUpCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBalanceCompleted As GetBalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStatusCompleted As GetStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCodeCompleted As GetCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event UDPPwdCompleted As UDPPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event UDPSIGNCompleted As UDPSIGNCompletedEventHandler
        
        '''<remarks/>
        Public Event UDPSIGNEXCompleted As UDPSIGNEXCompletedEventHandler
        
        '''<remarks/>
        Public Event RECSMSCompleted As RECSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event RECSMSExCompleted As RECSMSExCompletedEventHandler
        
        '''<remarks/>
        Public Event RECSMS_UTF8Completed As RECSMS_UTF8CompletedEventHandler
        
        '''<remarks/>
        Public Event RECSMSEx_UTF8Completed As RECSMSEx_UTF8CompletedEventHandler
        
        '''<remarks/>
        Public Event RegisterCompleted As RegisterCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFlagCompleted As GetFlagCompletedEventHandler
        
        '''<remarks/>
        Public Event SMSTestCompleted As SMSTestCompletedEventHandler
        
        '''<remarks/>
        Public Event TestCodeCompleted As TestCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllInfoCompleted As GetAllInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllInfo2Completed As GetAllInfo2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetGaoDuanCompleted As SetGaoDuanCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGaoDuanCompleted As GetGaoDuanCompletedEventHandler
        
        '''<remarks/>
        Public Event mtCompleted As mtCompletedEventHandler
        
        '''<remarks/>
        Public Event mdSmsSendCompleted As mdSmsSendCompletedEventHandler
        
        '''<remarks/>
        Public Event mdSmsSend_uCompleted As mdSmsSend_uCompletedEventHandler
        
        '''<remarks/>
        Public Event mdSmsSend_DESCompleted As mdSmsSend_DESCompletedEventHandler
        
        '''<remarks/>
        Public Event moCompleted As moCompletedEventHandler
        
        '''<remarks/>
        Public Event mo2Completed As mo2CompletedEventHandler
        
        '''<remarks/>
        Public Event reportCompleted As reportCompletedEventHandler
        
        '''<remarks/>
        Public Event report2Completed As report2CompletedEventHandler
        
        '''<remarks/>
        Public Event report2DESCompleted As report2DESCompletedEventHandler
        
        '''<remarks/>
        Public Event msgidCompleted As msgidCompletedEventHandler
        
        '''<remarks/>
        Public Event balanceCompleted As balanceCompletedEventHandler
        
        '''<remarks/>
        Public Event gxmtCompleted As gxmtCompletedEventHandler
        
        '''<remarks/>
        Public Event fileMTCompleted As fileMTCompletedEventHandler
        
        '''<remarks/>
        Public Event mmsFileMTCompleted As mmsFileMTCompletedEventHandler
        
        '''<remarks/>
        Public Event mdMmsSendCompleted As mdMmsSendCompletedEventHandler
        
        '''<remarks/>
        Public Event mdMmsSendFCompleted As mdMmsSendFCompletedEventHandler
        
        '''<remarks/>
        Public Event mdAudioSendCompleted As mdAudioSendCompletedEventHandler
        
        '''<remarks/>
        Public Event mdFaxSendCompleted As mdFaxSendCompletedEventHandler
        
        '''<remarks/>
        Public Event mdMmsReceiveCompleted As mdMmsReceiveCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMS(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String) As String
            Dim results() As Object = Me.Invoke("SendSMS", New Object() {sn, pwd, mobile, content})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String)
            Me.SendSMSAsync(sn, pwd, mobile, content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal userState As Object)
            If (Me.SendSMSOperationCompleted Is Nothing) Then
                Me.SendSMSOperationCompleted = AddressOf Me.OnSendSMSOperationCompleted
            End If
            Me.InvokeAsync("SendSMS", New Object() {sn, pwd, mobile, content}, Me.SendSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSCompleted(Me, New SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS_R", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMS_R(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("SendSMS_R", New Object() {sn, pwd, mobile, content, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMS_RAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal rrid As String)
            Me.SendSMS_RAsync(sn, pwd, mobile, content, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMS_RAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.SendSMS_ROperationCompleted Is Nothing) Then
                Me.SendSMS_ROperationCompleted = AddressOf Me.OnSendSMS_ROperationCompleted
            End If
            Me.InvokeAsync("SendSMS_R", New Object() {sn, pwd, mobile, content, rrid}, Me.SendSMS_ROperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMS_ROperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMS_RCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMS_RCompleted(Me, New SendSMS_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSEx", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMSEx(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal subcode As String) As String
            Dim results() As Object = Me.Invoke("SendSMSEx", New Object() {sn, pwd, mobile, content, subcode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSExAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal subcode As String)
            Me.SendSMSExAsync(sn, pwd, mobile, content, subcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSExAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal subcode As String, ByVal userState As Object)
            If (Me.SendSMSExOperationCompleted Is Nothing) Then
                Me.SendSMSExOperationCompleted = AddressOf Me.OnSendSMSExOperationCompleted
            End If
            Me.InvokeAsync("SendSMSEx", New Object() {sn, pwd, mobile, content, subcode}, Me.SendSMSExOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSExOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSExCompleted(Me, New SendSMSExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSEx_R", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMSEx_R(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal subcode As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("SendSMSEx_R", New Object() {sn, pwd, mobile, content, subcode, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSEx_RAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal subcode As String, ByVal rrid As String)
            Me.SendSMSEx_RAsync(sn, pwd, mobile, content, subcode, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSEx_RAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal subcode As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.SendSMSEx_ROperationCompleted Is Nothing) Then
                Me.SendSMSEx_ROperationCompleted = AddressOf Me.OnSendSMSEx_ROperationCompleted
            End If
            Me.InvokeAsync("SendSMSEx_R", New Object() {sn, pwd, mobile, content, subcode, rrid}, Me.SendSMSEx_ROperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSEx_ROperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSEx_RCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSEx_RCompleted(Me, New SendSMSEx_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnRegister", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UnRegister(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("UnRegister", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UnRegisterAsync(ByVal sn As String, ByVal pwd As String)
            Me.UnRegisterAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnRegisterAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.UnRegisterOperationCompleted Is Nothing) Then
                Me.UnRegisterOperationCompleted = AddressOf Me.OnUnRegisterOperationCompleted
            End If
            Me.InvokeAsync("UnRegister", New Object() {sn, pwd}, Me.UnRegisterOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnRegisterOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnRegisterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnRegisterCompleted(Me, New UnRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargUp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChargUp(ByVal sn As String, ByVal pwd As String, ByVal cardno As String, ByVal cardpwd As String) As String
            Dim results() As Object = Me.Invoke("ChargUp", New Object() {sn, pwd, cardno, cardpwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChargUpAsync(ByVal sn As String, ByVal pwd As String, ByVal cardno As String, ByVal cardpwd As String)
            Me.ChargUpAsync(sn, pwd, cardno, cardpwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChargUpAsync(ByVal sn As String, ByVal pwd As String, ByVal cardno As String, ByVal cardpwd As String, ByVal userState As Object)
            If (Me.ChargUpOperationCompleted Is Nothing) Then
                Me.ChargUpOperationCompleted = AddressOf Me.OnChargUpOperationCompleted
            End If
            Me.InvokeAsync("ChargUp", New Object() {sn, pwd, cardno, cardpwd}, Me.ChargUpOperationCompleted, userState)
        End Sub
        
        Private Sub OnChargUpOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChargUpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChargUpCompleted(Me, New ChargUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBalance(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("GetBalance", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBalanceAsync(ByVal sn As String, ByVal pwd As String)
            Me.GetBalanceAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBalanceAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetBalanceOperationCompleted Is Nothing) Then
                Me.GetBalanceOperationCompleted = AddressOf Me.OnGetBalanceOperationCompleted
            End If
            Me.InvokeAsync("GetBalance", New Object() {sn, pwd}, Me.GetBalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBalanceCompleted(Me, New GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStatus(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("GetStatus", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStatusAsync(ByVal sn As String, ByVal pwd As String)
            Me.GetStatusAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStatusAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetStatusOperationCompleted Is Nothing) Then
                Me.GetStatusOperationCompleted = AddressOf Me.OnGetStatusOperationCompleted
            End If
            Me.InvokeAsync("GetStatus", New Object() {sn, pwd}, Me.GetStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStatusCompleted(Me, New GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCode(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("GetCode", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCodeAsync(ByVal sn As String, ByVal pwd As String)
            Me.GetCodeAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCodeAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetCodeOperationCompleted Is Nothing) Then
                Me.GetCodeOperationCompleted = AddressOf Me.OnGetCodeOperationCompleted
            End If
            Me.InvokeAsync("GetCode", New Object() {sn, pwd}, Me.GetCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCodeCompleted(Me, New GetCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UDPPwd", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UDPPwd(ByVal sn As String, ByVal pwd As String, ByVal newpwd As String) As String
            Dim results() As Object = Me.Invoke("UDPPwd", New Object() {sn, pwd, newpwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UDPPwdAsync(ByVal sn As String, ByVal pwd As String, ByVal newpwd As String)
            Me.UDPPwdAsync(sn, pwd, newpwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UDPPwdAsync(ByVal sn As String, ByVal pwd As String, ByVal newpwd As String, ByVal userState As Object)
            If (Me.UDPPwdOperationCompleted Is Nothing) Then
                Me.UDPPwdOperationCompleted = AddressOf Me.OnUDPPwdOperationCompleted
            End If
            Me.InvokeAsync("UDPPwd", New Object() {sn, pwd, newpwd}, Me.UDPPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnUDPPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.UDPPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UDPPwdCompleted(Me, New UDPPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UDPSIGN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UDPSIGN(ByVal sn As String, ByVal pwd As String, ByVal sign As String) As String
            Dim results() As Object = Me.Invoke("UDPSIGN", New Object() {sn, pwd, sign})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UDPSIGNAsync(ByVal sn As String, ByVal pwd As String, ByVal sign As String)
            Me.UDPSIGNAsync(sn, pwd, sign, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UDPSIGNAsync(ByVal sn As String, ByVal pwd As String, ByVal sign As String, ByVal userState As Object)
            If (Me.UDPSIGNOperationCompleted Is Nothing) Then
                Me.UDPSIGNOperationCompleted = AddressOf Me.OnUDPSIGNOperationCompleted
            End If
            Me.InvokeAsync("UDPSIGN", New Object() {sn, pwd, sign}, Me.UDPSIGNOperationCompleted, userState)
        End Sub
        
        Private Sub OnUDPSIGNOperationCompleted(ByVal arg As Object)
            If (Not (Me.UDPSIGNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UDPSIGNCompleted(Me, New UDPSIGNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UDPSIGNEX", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UDPSIGNEX(ByVal sn As String, ByVal pwd As String, ByVal subcode As String, ByVal sign As String, ByVal comName As String) As String
            Dim results() As Object = Me.Invoke("UDPSIGNEX", New Object() {sn, pwd, subcode, sign, comName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UDPSIGNEXAsync(ByVal sn As String, ByVal pwd As String, ByVal subcode As String, ByVal sign As String, ByVal comName As String)
            Me.UDPSIGNEXAsync(sn, pwd, subcode, sign, comName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UDPSIGNEXAsync(ByVal sn As String, ByVal pwd As String, ByVal subcode As String, ByVal sign As String, ByVal comName As String, ByVal userState As Object)
            If (Me.UDPSIGNEXOperationCompleted Is Nothing) Then
                Me.UDPSIGNEXOperationCompleted = AddressOf Me.OnUDPSIGNEXOperationCompleted
            End If
            Me.InvokeAsync("UDPSIGNEX", New Object() {sn, pwd, subcode, sign, comName}, Me.UDPSIGNEXOperationCompleted, userState)
        End Sub
        
        Private Sub OnUDPSIGNEXOperationCompleted(ByVal arg As Object)
            If (Not (Me.UDPSIGNEXCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UDPSIGNEXCompleted(Me, New UDPSIGNEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RECSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RECSMS(ByVal sn As String, ByVal pwd As String) As MOBody()
            Dim results() As Object = Me.Invoke("RECSMS", New Object() {sn, pwd})
            Return CType(results(0),MOBody())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RECSMSAsync(ByVal sn As String, ByVal pwd As String)
            Me.RECSMSAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RECSMSAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.RECSMSOperationCompleted Is Nothing) Then
                Me.RECSMSOperationCompleted = AddressOf Me.OnRECSMSOperationCompleted
            End If
            Me.InvokeAsync("RECSMS", New Object() {sn, pwd}, Me.RECSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnRECSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.RECSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RECSMSCompleted(Me, New RECSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RECSMSEx", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RECSMSEx(ByVal sn As String, ByVal pwd As String, ByVal subcode As String) As MOBody()
            Dim results() As Object = Me.Invoke("RECSMSEx", New Object() {sn, pwd, subcode})
            Return CType(results(0),MOBody())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RECSMSExAsync(ByVal sn As String, ByVal pwd As String, ByVal subcode As String)
            Me.RECSMSExAsync(sn, pwd, subcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RECSMSExAsync(ByVal sn As String, ByVal pwd As String, ByVal subcode As String, ByVal userState As Object)
            If (Me.RECSMSExOperationCompleted Is Nothing) Then
                Me.RECSMSExOperationCompleted = AddressOf Me.OnRECSMSExOperationCompleted
            End If
            Me.InvokeAsync("RECSMSEx", New Object() {sn, pwd, subcode}, Me.RECSMSExOperationCompleted, userState)
        End Sub
        
        Private Sub OnRECSMSExOperationCompleted(ByVal arg As Object)
            If (Not (Me.RECSMSExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RECSMSExCompleted(Me, New RECSMSExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RECSMS_UTF8", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RECSMS_UTF8(ByVal sn As String, ByVal pwd As String) As MOBody()
            Dim results() As Object = Me.Invoke("RECSMS_UTF8", New Object() {sn, pwd})
            Return CType(results(0),MOBody())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RECSMS_UTF8Async(ByVal sn As String, ByVal pwd As String)
            Me.RECSMS_UTF8Async(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RECSMS_UTF8Async(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.RECSMS_UTF8OperationCompleted Is Nothing) Then
                Me.RECSMS_UTF8OperationCompleted = AddressOf Me.OnRECSMS_UTF8OperationCompleted
            End If
            Me.InvokeAsync("RECSMS_UTF8", New Object() {sn, pwd}, Me.RECSMS_UTF8OperationCompleted, userState)
        End Sub
        
        Private Sub OnRECSMS_UTF8OperationCompleted(ByVal arg As Object)
            If (Not (Me.RECSMS_UTF8CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RECSMS_UTF8Completed(Me, New RECSMS_UTF8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RECSMSEx_UTF8", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RECSMSEx_UTF8(ByVal sn As String, ByVal pwd As String, ByVal subcode As String) As MOBody()
            Dim results() As Object = Me.Invoke("RECSMSEx_UTF8", New Object() {sn, pwd, subcode})
            Return CType(results(0),MOBody())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RECSMSEx_UTF8Async(ByVal sn As String, ByVal pwd As String, ByVal subcode As String)
            Me.RECSMSEx_UTF8Async(sn, pwd, subcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RECSMSEx_UTF8Async(ByVal sn As String, ByVal pwd As String, ByVal subcode As String, ByVal userState As Object)
            If (Me.RECSMSEx_UTF8OperationCompleted Is Nothing) Then
                Me.RECSMSEx_UTF8OperationCompleted = AddressOf Me.OnRECSMSEx_UTF8OperationCompleted
            End If
            Me.InvokeAsync("RECSMSEx_UTF8", New Object() {sn, pwd, subcode}, Me.RECSMSEx_UTF8OperationCompleted, userState)
        End Sub
        
        Private Sub OnRECSMSEx_UTF8OperationCompleted(ByVal arg As Object)
            If (Not (Me.RECSMSEx_UTF8CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RECSMSEx_UTF8Completed(Me, New RECSMSEx_UTF8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Register(ByVal sn As String, ByVal pwd As String, ByVal province As String, ByVal city As String, ByVal trade As String, ByVal entname As String, ByVal linkman As String, ByVal phone As String, ByVal mobile As String, ByVal email As String, ByVal fax As String, ByVal address As String, ByVal postcode As String, ByVal sign As String) As String
            Dim results() As Object = Me.Invoke("Register", New Object() {sn, pwd, province, city, trade, entname, linkman, phone, mobile, email, fax, address, postcode, sign})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegisterAsync(ByVal sn As String, ByVal pwd As String, ByVal province As String, ByVal city As String, ByVal trade As String, ByVal entname As String, ByVal linkman As String, ByVal phone As String, ByVal mobile As String, ByVal email As String, ByVal fax As String, ByVal address As String, ByVal postcode As String, ByVal sign As String)
            Me.RegisterAsync(sn, pwd, province, city, trade, entname, linkman, phone, mobile, email, fax, address, postcode, sign, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterAsync(ByVal sn As String, ByVal pwd As String, ByVal province As String, ByVal city As String, ByVal trade As String, ByVal entname As String, ByVal linkman As String, ByVal phone As String, ByVal mobile As String, ByVal email As String, ByVal fax As String, ByVal address As String, ByVal postcode As String, ByVal sign As String, ByVal userState As Object)
            If (Me.RegisterOperationCompleted Is Nothing) Then
                Me.RegisterOperationCompleted = AddressOf Me.OnRegisterOperationCompleted
            End If
            Me.InvokeAsync("Register", New Object() {sn, pwd, province, city, trade, entname, linkman, phone, mobile, email, fax, address, postcode, sign}, Me.RegisterOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterCompleted(Me, New RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlag", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFlag(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("GetFlag", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFlagAsync(ByVal sn As String, ByVal pwd As String)
            Me.GetFlagAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlagAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetFlagOperationCompleted Is Nothing) Then
                Me.GetFlagOperationCompleted = AddressOf Me.OnGetFlagOperationCompleted
            End If
            Me.InvokeAsync("GetFlag", New Object() {sn, pwd}, Me.GetFlagOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFlagOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFlagCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFlagCompleted(Me, New GetFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSTest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SMSTest(ByVal sn As String, ByVal pwd As String, ByVal mobile As String) As String
            Dim results() As Object = Me.Invoke("SMSTest", New Object() {sn, pwd, mobile})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SMSTestAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String)
            Me.SMSTestAsync(sn, pwd, mobile, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SMSTestAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal userState As Object)
            If (Me.SMSTestOperationCompleted Is Nothing) Then
                Me.SMSTestOperationCompleted = AddressOf Me.OnSMSTestOperationCompleted
            End If
            Me.InvokeAsync("SMSTest", New Object() {sn, pwd, mobile}, Me.SMSTestOperationCompleted, userState)
        End Sub
        
        Private Sub OnSMSTestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SMSTestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SMSTestCompleted(Me, New SMSTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TestCode(ByVal content As String, ByVal code As String, ByVal type As String) As String
            Dim results() As Object = Me.Invoke("TestCode", New Object() {content, code, type})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestCodeAsync(ByVal content As String, ByVal code As String, ByVal type As String)
            Me.TestCodeAsync(content, code, type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestCodeAsync(ByVal content As String, ByVal code As String, ByVal type As String, ByVal userState As Object)
            If (Me.TestCodeOperationCompleted Is Nothing) Then
                Me.TestCodeOperationCompleted = AddressOf Me.OnTestCodeOperationCompleted
            End If
            Me.InvokeAsync("TestCode", New Object() {content, code, type}, Me.TestCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestCodeCompleted(Me, New TestCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllInfo(ByVal sn As String, ByVal pwd As String) As RegistryInfo
            Dim results() As Object = Me.Invoke("GetAllInfo", New Object() {sn, pwd})
            Return CType(results(0),RegistryInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllInfoAsync(ByVal sn As String, ByVal pwd As String)
            Me.GetAllInfoAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllInfoAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetAllInfoOperationCompleted Is Nothing) Then
                Me.GetAllInfoOperationCompleted = AddressOf Me.OnGetAllInfoOperationCompleted
            End If
            Me.InvokeAsync("GetAllInfo", New Object() {sn, pwd}, Me.GetAllInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllInfoCompleted(Me, New GetAllInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllInfo2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllInfo2(ByVal sn As String, ByVal pwd As String, ByVal ver As String, ByVal oem As String) As RegistryInfo2
            Dim results() As Object = Me.Invoke("GetAllInfo2", New Object() {sn, pwd, ver, oem})
            Return CType(results(0),RegistryInfo2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllInfo2Async(ByVal sn As String, ByVal pwd As String, ByVal ver As String, ByVal oem As String)
            Me.GetAllInfo2Async(sn, pwd, ver, oem, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllInfo2Async(ByVal sn As String, ByVal pwd As String, ByVal ver As String, ByVal oem As String, ByVal userState As Object)
            If (Me.GetAllInfo2OperationCompleted Is Nothing) Then
                Me.GetAllInfo2OperationCompleted = AddressOf Me.OnGetAllInfo2OperationCompleted
            End If
            Me.InvokeAsync("GetAllInfo2", New Object() {sn, pwd, ver, oem}, Me.GetAllInfo2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllInfo2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllInfo2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllInfo2Completed(Me, New GetAllInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetGaoDuan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetGaoDuan(ByVal sn As String, ByVal pwd As String, ByVal gd As String) As Double
            Dim results() As Object = Me.Invoke("SetGaoDuan", New Object() {sn, pwd, gd})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetGaoDuanAsync(ByVal sn As String, ByVal pwd As String, ByVal gd As String)
            Me.SetGaoDuanAsync(sn, pwd, gd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetGaoDuanAsync(ByVal sn As String, ByVal pwd As String, ByVal gd As String, ByVal userState As Object)
            If (Me.SetGaoDuanOperationCompleted Is Nothing) Then
                Me.SetGaoDuanOperationCompleted = AddressOf Me.OnSetGaoDuanOperationCompleted
            End If
            Me.InvokeAsync("SetGaoDuan", New Object() {sn, pwd, gd}, Me.SetGaoDuanOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetGaoDuanOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetGaoDuanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetGaoDuanCompleted(Me, New SetGaoDuanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGaoDuan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGaoDuan(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("GetGaoDuan", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGaoDuanAsync(ByVal sn As String, ByVal pwd As String)
            Me.GetGaoDuanAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGaoDuanAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetGaoDuanOperationCompleted Is Nothing) Then
                Me.GetGaoDuanOperationCompleted = AddressOf Me.OnGetGaoDuanOperationCompleted
            End If
            Me.InvokeAsync("GetGaoDuan", New Object() {sn, pwd}, Me.GetGaoDuanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGaoDuanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGaoDuanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGaoDuanCompleted(Me, New GetGaoDuanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mt(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("mt", New Object() {sn, pwd, mobile, content, ext, stime, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mtAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String)
            Me.mtAsync(sn, pwd, mobile, content, ext, stime, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mtAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.mtOperationCompleted Is Nothing) Then
                Me.mtOperationCompleted = AddressOf Me.OnmtOperationCompleted
            End If
            Me.InvokeAsync("mt", New Object() {sn, pwd, mobile, content, ext, stime, rrid}, Me.mtOperationCompleted, userState)
        End Sub
        
        Private Sub OnmtOperationCompleted(ByVal arg As Object)
            If (Not (Me.mtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mtCompleted(Me, New mtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdSmsSend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdSmsSend(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("mdSmsSend", New Object() {sn, pwd, mobile, content, ext, stime, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdSmsSendAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String)
            Me.mdSmsSendAsync(sn, pwd, mobile, content, ext, stime, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdSmsSendAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.mdSmsSendOperationCompleted Is Nothing) Then
                Me.mdSmsSendOperationCompleted = AddressOf Me.OnmdSmsSendOperationCompleted
            End If
            Me.InvokeAsync("mdSmsSend", New Object() {sn, pwd, mobile, content, ext, stime, rrid}, Me.mdSmsSendOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdSmsSendOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdSmsSendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdSmsSendCompleted(Me, New mdSmsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdSmsSend_u", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdSmsSend_u(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("mdSmsSend_u", New Object() {sn, pwd, mobile, content, ext, stime, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdSmsSend_uAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String)
            Me.mdSmsSend_uAsync(sn, pwd, mobile, content, ext, stime, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdSmsSend_uAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.mdSmsSend_uOperationCompleted Is Nothing) Then
                Me.mdSmsSend_uOperationCompleted = AddressOf Me.OnmdSmsSend_uOperationCompleted
            End If
            Me.InvokeAsync("mdSmsSend_u", New Object() {sn, pwd, mobile, content, ext, stime, rrid}, Me.mdSmsSend_uOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdSmsSend_uOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdSmsSend_uCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdSmsSend_uCompleted(Me, New mdSmsSend_uCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdSmsSend_DES", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdSmsSend_DES(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("mdSmsSend_DES", New Object() {sn, pwd, mobile, content, ext, stime, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdSmsSend_DESAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String)
            Me.mdSmsSend_DESAsync(sn, pwd, mobile, content, ext, stime, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdSmsSend_DESAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.mdSmsSend_DESOperationCompleted Is Nothing) Then
                Me.mdSmsSend_DESOperationCompleted = AddressOf Me.OnmdSmsSend_DESOperationCompleted
            End If
            Me.InvokeAsync("mdSmsSend_DES", New Object() {sn, pwd, mobile, content, ext, stime, rrid}, Me.mdSmsSend_DESOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdSmsSend_DESOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdSmsSend_DESCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdSmsSend_DESCompleted(Me, New mdSmsSend_DESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mo(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("mo", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub moAsync(ByVal sn As String, ByVal pwd As String)
            Me.moAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub moAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.moOperationCompleted Is Nothing) Then
                Me.moOperationCompleted = AddressOf Me.OnmoOperationCompleted
            End If
            Me.InvokeAsync("mo", New Object() {sn, pwd}, Me.moOperationCompleted, userState)
        End Sub
        
        Private Sub OnmoOperationCompleted(ByVal arg As Object)
            If (Not (Me.moCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent moCompleted(Me, New moCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mo2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mo2(ByVal sn As String, ByVal pwd As String, ByVal maxID As Integer) As String
            Dim results() As Object = Me.Invoke("mo2", New Object() {sn, pwd, maxID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mo2Async(ByVal sn As String, ByVal pwd As String, ByVal maxID As Integer)
            Me.mo2Async(sn, pwd, maxID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mo2Async(ByVal sn As String, ByVal pwd As String, ByVal maxID As Integer, ByVal userState As Object)
            If (Me.mo2OperationCompleted Is Nothing) Then
                Me.mo2OperationCompleted = AddressOf Me.Onmo2OperationCompleted
            End If
            Me.InvokeAsync("mo2", New Object() {sn, pwd, maxID}, Me.mo2OperationCompleted, userState)
        End Sub
        
        Private Sub Onmo2OperationCompleted(ByVal arg As Object)
            If (Not (Me.mo2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mo2Completed(Me, New mo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/report", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function report(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long) As String
            Dim results() As Object = Me.Invoke("report", New Object() {sn, pwd, maxid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub reportAsync(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long)
            Me.reportAsync(sn, pwd, maxid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub reportAsync(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal userState As Object)
            If (Me.reportOperationCompleted Is Nothing) Then
                Me.reportOperationCompleted = AddressOf Me.OnreportOperationCompleted
            End If
            Me.InvokeAsync("report", New Object() {sn, pwd, maxid}, Me.reportOperationCompleted, userState)
        End Sub
        
        Private Sub OnreportOperationCompleted(ByVal arg As Object)
            If (Not (Me.reportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent reportCompleted(Me, New reportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/report2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function report2(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("report2", New Object() {sn, pwd, maxid, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub report2Async(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal rrid As String)
            Me.report2Async(sn, pwd, maxid, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub report2Async(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal rrid As String, ByVal userState As Object)
            If (Me.report2OperationCompleted Is Nothing) Then
                Me.report2OperationCompleted = AddressOf Me.Onreport2OperationCompleted
            End If
            Me.InvokeAsync("report2", New Object() {sn, pwd, maxid, rrid}, Me.report2OperationCompleted, userState)
        End Sub
        
        Private Sub Onreport2OperationCompleted(ByVal arg As Object)
            If (Not (Me.report2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent report2Completed(Me, New report2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/report2DES", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function report2DES(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("report2DES", New Object() {sn, pwd, maxid, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub report2DESAsync(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal rrid As String)
            Me.report2DESAsync(sn, pwd, maxid, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub report2DESAsync(ByVal sn As String, ByVal pwd As String, ByVal maxid As Long, ByVal rrid As String, ByVal userState As Object)
            If (Me.report2DESOperationCompleted Is Nothing) Then
                Me.report2DESOperationCompleted = AddressOf Me.Onreport2DESOperationCompleted
            End If
            Me.InvokeAsync("report2DES", New Object() {sn, pwd, maxid, rrid}, Me.report2DESOperationCompleted, userState)
        End Sub
        
        Private Sub Onreport2DESOperationCompleted(ByVal arg As Object)
            If (Not (Me.report2DESCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent report2DESCompleted(Me, New report2DESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/msgid", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function msgid(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("msgid", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub msgidAsync(ByVal sn As String, ByVal pwd As String)
            Me.msgidAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub msgidAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.msgidOperationCompleted Is Nothing) Then
                Me.msgidOperationCompleted = AddressOf Me.OnmsgidOperationCompleted
            End If
            Me.InvokeAsync("msgid", New Object() {sn, pwd}, Me.msgidOperationCompleted, userState)
        End Sub
        
        Private Sub OnmsgidOperationCompleted(ByVal arg As Object)
            If (Not (Me.msgidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent msgidCompleted(Me, New msgidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/balance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function balance(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("balance", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub balanceAsync(ByVal sn As String, ByVal pwd As String)
            Me.balanceAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub balanceAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.balanceOperationCompleted Is Nothing) Then
                Me.balanceOperationCompleted = AddressOf Me.OnbalanceOperationCompleted
            End If
            Me.InvokeAsync("balance", New Object() {sn, pwd}, Me.balanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnbalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.balanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent balanceCompleted(Me, New balanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/gxmt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function gxmt(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String) As String
            Dim results() As Object = Me.Invoke("gxmt", New Object() {sn, pwd, mobile, content, ext, stime, rrid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub gxmtAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String)
            Me.gxmtAsync(sn, pwd, mobile, content, ext, stime, rrid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub gxmtAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal ext As String, ByVal stime As String, ByVal rrid As String, ByVal userState As Object)
            If (Me.gxmtOperationCompleted Is Nothing) Then
                Me.gxmtOperationCompleted = AddressOf Me.OngxmtOperationCompleted
            End If
            Me.InvokeAsync("gxmt", New Object() {sn, pwd, mobile, content, ext, stime, rrid}, Me.gxmtOperationCompleted, userState)
        End Sub
        
        Private Sub OngxmtOperationCompleted(ByVal arg As Object)
            If (Not (Me.gxmtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent gxmtCompleted(Me, New gxmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fileMT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fileMT(ByVal sn As String, ByVal pwd As String, ByVal fname As String, ByVal rrid As String, ByVal sort As Integer, ByVal total As Integer, ByVal ftype As Integer, ByVal content As String) As String
            Dim results() As Object = Me.Invoke("fileMT", New Object() {sn, pwd, fname, rrid, sort, total, ftype, content})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fileMTAsync(ByVal sn As String, ByVal pwd As String, ByVal fname As String, ByVal rrid As String, ByVal sort As Integer, ByVal total As Integer, ByVal ftype As Integer, ByVal content As String)
            Me.fileMTAsync(sn, pwd, fname, rrid, sort, total, ftype, content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fileMTAsync(ByVal sn As String, ByVal pwd As String, ByVal fname As String, ByVal rrid As String, ByVal sort As Integer, ByVal total As Integer, ByVal ftype As Integer, ByVal content As String, ByVal userState As Object)
            If (Me.fileMTOperationCompleted Is Nothing) Then
                Me.fileMTOperationCompleted = AddressOf Me.OnfileMTOperationCompleted
            End If
            Me.InvokeAsync("fileMT", New Object() {sn, pwd, fname, rrid, sort, total, ftype, content}, Me.fileMTOperationCompleted, userState)
        End Sub
        
        Private Sub OnfileMTOperationCompleted(ByVal arg As Object)
            If (Not (Me.fileMTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fileMTCompleted(Me, New fileMTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mmsFileMT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mmsFileMT(ByVal sn As String, ByVal pwd As String, ByVal rrid As String, ByVal content As String) As String
            Dim results() As Object = Me.Invoke("mmsFileMT", New Object() {sn, pwd, rrid, content})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mmsFileMTAsync(ByVal sn As String, ByVal pwd As String, ByVal rrid As String, ByVal content As String)
            Me.mmsFileMTAsync(sn, pwd, rrid, content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mmsFileMTAsync(ByVal sn As String, ByVal pwd As String, ByVal rrid As String, ByVal content As String, ByVal userState As Object)
            If (Me.mmsFileMTOperationCompleted Is Nothing) Then
                Me.mmsFileMTOperationCompleted = AddressOf Me.OnmmsFileMTOperationCompleted
            End If
            Me.InvokeAsync("mmsFileMT", New Object() {sn, pwd, rrid, content}, Me.mmsFileMTOperationCompleted, userState)
        End Sub
        
        Private Sub OnmmsFileMTOperationCompleted(ByVal arg As Object)
            If (Not (Me.mmsFileMTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mmsFileMTCompleted(Me, New mmsFileMTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdMmsSend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdMmsSend(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal content As String, ByVal stime As String) As String
            Dim results() As Object = Me.Invoke("mdMmsSend", New Object() {sn, pwd, title, mobile, content, stime})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdMmsSendAsync(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal content As String, ByVal stime As String)
            Me.mdMmsSendAsync(sn, pwd, title, mobile, content, stime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdMmsSendAsync(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal content As String, ByVal stime As String, ByVal userState As Object)
            If (Me.mdMmsSendOperationCompleted Is Nothing) Then
                Me.mdMmsSendOperationCompleted = AddressOf Me.OnmdMmsSendOperationCompleted
            End If
            Me.InvokeAsync("mdMmsSend", New Object() {sn, pwd, title, mobile, content, stime}, Me.mdMmsSendOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdMmsSendOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdMmsSendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdMmsSendCompleted(Me, New mdMmsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdMmsSendF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdMmsSendF(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal stime As String) As String
            Dim results() As Object = Me.Invoke("mdMmsSendF", New Object() {sn, pwd, mobile, content, stime})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdMmsSendFAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal stime As String)
            Me.mdMmsSendFAsync(sn, pwd, mobile, content, stime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdMmsSendFAsync(ByVal sn As String, ByVal pwd As String, ByVal mobile As String, ByVal content As String, ByVal stime As String, ByVal userState As Object)
            If (Me.mdMmsSendFOperationCompleted Is Nothing) Then
                Me.mdMmsSendFOperationCompleted = AddressOf Me.OnmdMmsSendFOperationCompleted
            End If
            Me.InvokeAsync("mdMmsSendF", New Object() {sn, pwd, mobile, content, stime}, Me.mdMmsSendFOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdMmsSendFOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdMmsSendFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdMmsSendFCompleted(Me, New mdMmsSendFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdAudioSend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdAudioSend(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal txt As String, ByVal content As String, ByVal srcnumber As String, ByVal stime As String) As String
            Dim results() As Object = Me.Invoke("mdAudioSend", New Object() {sn, pwd, title, mobile, txt, content, srcnumber, stime})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdAudioSendAsync(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal txt As String, ByVal content As String, ByVal srcnumber As String, ByVal stime As String)
            Me.mdAudioSendAsync(sn, pwd, title, mobile, txt, content, srcnumber, stime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdAudioSendAsync(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal txt As String, ByVal content As String, ByVal srcnumber As String, ByVal stime As String, ByVal userState As Object)
            If (Me.mdAudioSendOperationCompleted Is Nothing) Then
                Me.mdAudioSendOperationCompleted = AddressOf Me.OnmdAudioSendOperationCompleted
            End If
            Me.InvokeAsync("mdAudioSend", New Object() {sn, pwd, title, mobile, txt, content, srcnumber, stime}, Me.mdAudioSendOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdAudioSendOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdAudioSendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdAudioSendCompleted(Me, New mdAudioSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdFaxSend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdFaxSend(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal content As String, ByVal srcnumber As String, ByVal stime As String) As String
            Dim results() As Object = Me.Invoke("mdFaxSend", New Object() {sn, pwd, title, mobile, content, srcnumber, stime})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdFaxSendAsync(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal content As String, ByVal srcnumber As String, ByVal stime As String)
            Me.mdFaxSendAsync(sn, pwd, title, mobile, content, srcnumber, stime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdFaxSendAsync(ByVal sn As String, ByVal pwd As String, ByVal title As String, ByVal mobile As String, ByVal content As String, ByVal srcnumber As String, ByVal stime As String, ByVal userState As Object)
            If (Me.mdFaxSendOperationCompleted Is Nothing) Then
                Me.mdFaxSendOperationCompleted = AddressOf Me.OnmdFaxSendOperationCompleted
            End If
            Me.InvokeAsync("mdFaxSend", New Object() {sn, pwd, title, mobile, content, srcnumber, stime}, Me.mdFaxSendOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdFaxSendOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdFaxSendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdFaxSendCompleted(Me, New mdFaxSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mdMmsReceive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mdMmsReceive(ByVal sn As String, ByVal pwd As String) As String
            Dim results() As Object = Me.Invoke("mdMmsReceive", New Object() {sn, pwd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mdMmsReceiveAsync(ByVal sn As String, ByVal pwd As String)
            Me.mdMmsReceiveAsync(sn, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mdMmsReceiveAsync(ByVal sn As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.mdMmsReceiveOperationCompleted Is Nothing) Then
                Me.mdMmsReceiveOperationCompleted = AddressOf Me.OnmdMmsReceiveOperationCompleted
            End If
            Me.InvokeAsync("mdMmsReceive", New Object() {sn, pwd}, Me.mdMmsReceiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnmdMmsReceiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.mdMmsReceiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mdMmsReceiveCompleted(Me, New mdMmsReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MOBody
        
        Private total_numField As String
        
        Private this_numField As String
        
        Private recvtelField As String
        
        Private senderField As String
        
        Private contentField As String
        
        Private recdateField As String
        
        '''<remarks/>
        Public Property total_num() As String
            Get
                Return Me.total_numField
            End Get
            Set
                Me.total_numField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property this_num() As String
            Get
                Return Me.this_numField
            End Get
            Set
                Me.this_numField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property recvtel() As String
            Get
                Return Me.recvtelField
            End Get
            Set
                Me.recvtelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sender() As String
            Get
                Return Me.senderField
            End Get
            Set
                Me.senderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property content() As String
            Get
                Return Me.contentField
            End Get
            Set
                Me.contentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property recdate() As String
            Get
                Return Me.recdateField
            End Get
            Set
                Me.recdateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RegistryInfo2
        
        Private rESULTField As String
        
        Private rEGISTRYCODEField As String
        
        Private sERVICECODEField As String
        
        Private bALANCEField As String
        
        Private cREATEDATEField As String
        
        Private rEGISTRYSTATEIDField As String
        
        Private pRIORITYField As String
        
        Private fIRSTREGISTRYDATEField As String
        
        Private rEGISTRYDATEField As String
        
        Private aGENTIDField As String
        
        Private pRODUCTNAMEField As String
        
        Private dESTMOBILEField As String
        
        Private fLAGField As String
        
        Private rEPLYCONTENTField As String
        
        Private iSRETURNField As String
        
        Private vERSIONField As String
        
        Private gRADEField As String
        
        Private pARENTField As String
        
        Private sUBSIDIARYField As String
        
        Private rOLESField As String
        
        Private bALSTATUSField As String
        
        Private dISCOUNTField As String
        
        Private sLISTField As String
        
        Private pOPMField As String
        
        Private uPDATEField As String
        
        Private mMSField As String
        
        '''<remarks/>
        Public Property RESULT() As String
            Get
                Return Me.rESULTField
            End Get
            Set
                Me.rESULTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGISTRYCODE() As String
            Get
                Return Me.rEGISTRYCODEField
            End Get
            Set
                Me.rEGISTRYCODEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SERVICECODE() As String
            Get
                Return Me.sERVICECODEField
            End Get
            Set
                Me.sERVICECODEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BALANCE() As String
            Get
                Return Me.bALANCEField
            End Get
            Set
                Me.bALANCEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CREATEDATE() As String
            Get
                Return Me.cREATEDATEField
            End Get
            Set
                Me.cREATEDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGISTRYSTATEID() As String
            Get
                Return Me.rEGISTRYSTATEIDField
            End Get
            Set
                Me.rEGISTRYSTATEIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PRIORITY() As String
            Get
                Return Me.pRIORITYField
            End Get
            Set
                Me.pRIORITYField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FIRSTREGISTRYDATE() As String
            Get
                Return Me.fIRSTREGISTRYDATEField
            End Get
            Set
                Me.fIRSTREGISTRYDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGISTRYDATE() As String
            Get
                Return Me.rEGISTRYDATEField
            End Get
            Set
                Me.rEGISTRYDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AGENTID() As String
            Get
                Return Me.aGENTIDField
            End Get
            Set
                Me.aGENTIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PRODUCTNAME() As String
            Get
                Return Me.pRODUCTNAMEField
            End Get
            Set
                Me.pRODUCTNAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESTMOBILE() As String
            Get
                Return Me.dESTMOBILEField
            End Get
            Set
                Me.dESTMOBILEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FLAG() As String
            Get
                Return Me.fLAGField
            End Get
            Set
                Me.fLAGField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REPLYCONTENT() As String
            Get
                Return Me.rEPLYCONTENTField
            End Get
            Set
                Me.rEPLYCONTENTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ISRETURN() As String
            Get
                Return Me.iSRETURNField
            End Get
            Set
                Me.iSRETURNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VERSION() As String
            Get
                Return Me.vERSIONField
            End Get
            Set
                Me.vERSIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GRADE() As String
            Get
                Return Me.gRADEField
            End Get
            Set
                Me.gRADEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PARENT() As String
            Get
                Return Me.pARENTField
            End Get
            Set
                Me.pARENTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SUBSIDIARY() As String
            Get
                Return Me.sUBSIDIARYField
            End Get
            Set
                Me.sUBSIDIARYField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ROLES() As String
            Get
                Return Me.rOLESField
            End Get
            Set
                Me.rOLESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BALSTATUS() As String
            Get
                Return Me.bALSTATUSField
            End Get
            Set
                Me.bALSTATUSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DISCOUNT() As String
            Get
                Return Me.dISCOUNTField
            End Get
            Set
                Me.dISCOUNTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SLIST() As String
            Get
                Return Me.sLISTField
            End Get
            Set
                Me.sLISTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POPM() As String
            Get
                Return Me.pOPMField
            End Get
            Set
                Me.pOPMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UPDATE() As String
            Get
                Return Me.uPDATEField
            End Get
            Set
                Me.uPDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MMS() As String
            Get
                Return Me.mMSField
            End Get
            Set
                Me.mMSField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RegistryInfo
        
        Private rESULTField As String
        
        Private rEGISTRYCODEField As String
        
        Private sERVICECODEField As String
        
        Private bALANCEField As String
        
        Private cREATEDATEField As String
        
        Private rEGISTRYSTATEIDField As String
        
        Private pRIORITYField As String
        
        Private fIRSTREGISTRYDATEField As String
        
        Private rEGISTRYDATEField As String
        
        Private aGENTIDField As String
        
        Private pRODUCTNAMEField As String
        
        Private dESTMOBILEField As String
        
        Private fLAGField As String
        
        Private rEPLYCONTENTField As String
        
        Private iSRETURNField As String
        
        Private vERSIONField As String
        
        Private gRADEField As String
        
        Private pARENTField As String
        
        Private sUBSIDIARYField As String
        
        Private rOLESField As String
        
        Private bALSTATUSField As String
        
        Private dISCOUNTField As String
        
        '''<remarks/>
        Public Property RESULT() As String
            Get
                Return Me.rESULTField
            End Get
            Set
                Me.rESULTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGISTRYCODE() As String
            Get
                Return Me.rEGISTRYCODEField
            End Get
            Set
                Me.rEGISTRYCODEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SERVICECODE() As String
            Get
                Return Me.sERVICECODEField
            End Get
            Set
                Me.sERVICECODEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BALANCE() As String
            Get
                Return Me.bALANCEField
            End Get
            Set
                Me.bALANCEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CREATEDATE() As String
            Get
                Return Me.cREATEDATEField
            End Get
            Set
                Me.cREATEDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGISTRYSTATEID() As String
            Get
                Return Me.rEGISTRYSTATEIDField
            End Get
            Set
                Me.rEGISTRYSTATEIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PRIORITY() As String
            Get
                Return Me.pRIORITYField
            End Get
            Set
                Me.pRIORITYField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FIRSTREGISTRYDATE() As String
            Get
                Return Me.fIRSTREGISTRYDATEField
            End Get
            Set
                Me.fIRSTREGISTRYDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGISTRYDATE() As String
            Get
                Return Me.rEGISTRYDATEField
            End Get
            Set
                Me.rEGISTRYDATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AGENTID() As String
            Get
                Return Me.aGENTIDField
            End Get
            Set
                Me.aGENTIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PRODUCTNAME() As String
            Get
                Return Me.pRODUCTNAMEField
            End Get
            Set
                Me.pRODUCTNAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESTMOBILE() As String
            Get
                Return Me.dESTMOBILEField
            End Get
            Set
                Me.dESTMOBILEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FLAG() As String
            Get
                Return Me.fLAGField
            End Get
            Set
                Me.fLAGField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REPLYCONTENT() As String
            Get
                Return Me.rEPLYCONTENTField
            End Get
            Set
                Me.rEPLYCONTENTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ISRETURN() As String
            Get
                Return Me.iSRETURNField
            End Get
            Set
                Me.iSRETURNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VERSION() As String
            Get
                Return Me.vERSIONField
            End Get
            Set
                Me.vERSIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GRADE() As String
            Get
                Return Me.gRADEField
            End Get
            Set
                Me.gRADEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PARENT() As String
            Get
                Return Me.pARENTField
            End Get
            Set
                Me.pARENTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SUBSIDIARY() As String
            Get
                Return Me.sUBSIDIARYField
            End Get
            Set
                Me.sUBSIDIARYField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ROLES() As String
            Get
                Return Me.rOLESField
            End Get
            Set
                Me.rOLESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BALSTATUS() As String
            Get
                Return Me.bALSTATUSField
            End Get
            Set
                Me.bALSTATUSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DISCOUNT() As String
            Get
                Return Me.dISCOUNTField
            End Get
            Set
                Me.dISCOUNTField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSMS_RCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMS_RCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMS_RCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSMSExCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSMSEx_RCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSEx_RCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSEx_RCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UnRegisterCompletedEventHandler(ByVal sender As Object, ByVal e As UnRegisterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UnRegisterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ChargUpCompletedEventHandler(ByVal sender As Object, ByVal e As ChargUpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChargUpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetBalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GetBalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UDPPwdCompletedEventHandler(ByVal sender As Object, ByVal e As UDPPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UDPPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UDPSIGNCompletedEventHandler(ByVal sender As Object, ByVal e As UDPSIGNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UDPSIGNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UDPSIGNEXCompletedEventHandler(ByVal sender As Object, ByVal e As UDPSIGNEXCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UDPSIGNEXCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RECSMSCompletedEventHandler(ByVal sender As Object, ByVal e As RECSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RECSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MOBody()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MOBody())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RECSMSExCompletedEventHandler(ByVal sender As Object, ByVal e As RECSMSExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RECSMSExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MOBody()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MOBody())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RECSMS_UTF8CompletedEventHandler(ByVal sender As Object, ByVal e As RECSMS_UTF8CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RECSMS_UTF8CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MOBody()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MOBody())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RECSMSEx_UTF8CompletedEventHandler(ByVal sender As Object, ByVal e As RECSMSEx_UTF8CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RECSMSEx_UTF8CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MOBody()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MOBody())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RegisterCompletedEventHandler(ByVal sender As Object, ByVal e As RegisterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegisterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetFlagCompletedEventHandler(ByVal sender As Object, ByVal e As GetFlagCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFlagCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SMSTestCompletedEventHandler(ByVal sender As Object, ByVal e As SMSTestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SMSTestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub TestCodeCompletedEventHandler(ByVal sender As Object, ByVal e As TestCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetAllInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RegistryInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RegistryInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetAllInfo2CompletedEventHandler(ByVal sender As Object, ByVal e As GetAllInfo2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllInfo2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RegistryInfo2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RegistryInfo2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetGaoDuanCompletedEventHandler(ByVal sender As Object, ByVal e As SetGaoDuanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetGaoDuanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetGaoDuanCompletedEventHandler(ByVal sender As Object, ByVal e As GetGaoDuanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGaoDuanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mtCompletedEventHandler(ByVal sender As Object, ByVal e As mtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdSmsSendCompletedEventHandler(ByVal sender As Object, ByVal e As mdSmsSendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdSmsSendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdSmsSend_uCompletedEventHandler(ByVal sender As Object, ByVal e As mdSmsSend_uCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdSmsSend_uCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdSmsSend_DESCompletedEventHandler(ByVal sender As Object, ByVal e As mdSmsSend_DESCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdSmsSend_DESCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub moCompletedEventHandler(ByVal sender As Object, ByVal e As moCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class moCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mo2CompletedEventHandler(ByVal sender As Object, ByVal e As mo2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mo2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub reportCompletedEventHandler(ByVal sender As Object, ByVal e As reportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class reportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub report2CompletedEventHandler(ByVal sender As Object, ByVal e As report2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class report2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub report2DESCompletedEventHandler(ByVal sender As Object, ByVal e As report2DESCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class report2DESCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub msgidCompletedEventHandler(ByVal sender As Object, ByVal e As msgidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class msgidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub balanceCompletedEventHandler(ByVal sender As Object, ByVal e As balanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class balanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub gxmtCompletedEventHandler(ByVal sender As Object, ByVal e As gxmtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class gxmtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub fileMTCompletedEventHandler(ByVal sender As Object, ByVal e As fileMTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fileMTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mmsFileMTCompletedEventHandler(ByVal sender As Object, ByVal e As mmsFileMTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mmsFileMTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdMmsSendCompletedEventHandler(ByVal sender As Object, ByVal e As mdMmsSendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdMmsSendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdMmsSendFCompletedEventHandler(ByVal sender As Object, ByVal e As mdMmsSendFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdMmsSendFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdAudioSendCompletedEventHandler(ByVal sender As Object, ByVal e As mdAudioSendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdAudioSendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdFaxSendCompletedEventHandler(ByVal sender As Object, ByVal e As mdFaxSendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdFaxSendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub mdMmsReceiveCompletedEventHandler(ByVal sender As Object, ByVal e As mdMmsReceiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mdMmsReceiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
